name: PR Check

on:
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: |
          cd frontend
          npm install
          cd ..
          cd backend
          pip install pre-commit ruff black
          cd ..
      - name: Run Linters
        run: |
          cd frontend/
          npm run lint:check
          npm run format:check
          cd ..
          cd backend/
          pre-commit run --config ../.pre-commit-config.yaml --all-files || exit 1
          cd ..
          cd frontend/src-tauri/
          cargo fmt -- --check

  # Frontend Test Job
  frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies & Run Tests
        run: |
          cd frontend
          npm install
          npm test

  # Backend Test Job
  backend:
    runs-on: ubuntu-latest
    name: Backend Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build check(Main backend)
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pyinstaller main.py --name PictoPy_Server --onedir --distpath dist

      - name: Build check(Sync Microservice)
        run: |
          cd sync-microservice
          pip install -r requirements.txt
          pyinstaller main.py --name PictoPy_Sync_Microservice --onedir --distpath dist

      - name: Run Tests
        run: |
          cd backend
          pytest

