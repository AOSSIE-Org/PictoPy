name: CI for PictoPy

on:
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: |
          cd frontend
          npm install
          cd ..
          cd backend
          pip install pre-commit ruff black mypy
          cd ..
      - name: Run Linters
        run: |
          cd frontend/
          npm run lint:check
          npm run format:check
          cd ..
          cd backend/
          pre-commit run --config ./.pre-commit-config.yaml --all-files || exit 1
          cd ..
          cd frontend/src-tauri/
          cargo fmt -- --check

  # Frontend Test Job
  frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies & Run Tests
        run: |
          cd frontend
          npm install
          npm test

  # Backend Test Job
  backend:
    runs-on: ubuntu-latest
    name: Backend Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python Dependencies & Run Tests
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pyinstaller main.py --name PictoPy_Server --onedir --distpath dist
          pytest

  # Tauri Test Job
  tauri:
    runs-on: ubuntu-latest
    name: Tauri Tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies for Tauri
        run: |
          sudo apt-get update -y

          echo "deb http://archive.ubuntu.com/ubuntu jammy main universe multiverse" | sudo tee /etc/apt/sources.list.d/ubuntu-jammy.list

          echo "deb http://security.ubuntu.com/ubuntu jammy-security main universe multiverse" | sudo tee -a /etc/apt/sources.list.d/ubuntu-jammy-security.list

          sudo apt-get update -y

          sudo apt-get install -y \
            curl build-essential libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev \
            wget xz-utils libssl-dev libglib2.0-dev libgirepository1.0-dev pkg-config \
            software-properties-common libjavascriptcoregtk-4.0-dev libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev libwebkit2gtk-4.1-dev librsvg2-dev file libglib2.0-dev libgl1-mesa-glx

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Tauri Tests
        run: |
          cd frontend/src-tauri
          cargo test
