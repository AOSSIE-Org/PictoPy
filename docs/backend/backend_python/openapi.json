{
  "openapi": "3.1.0",
  "info": {
    "title": "PictoPy",
    "description": "The API calls to PictoPy are done via HTTP requests. This backend is built using FastAPI.",
    "version": "0.1.0",
    "contact": {
      "name": "PictoPy Postman Collection",
      "url": "https://www.postman.com/aossie-pictopy/pictopy/overview"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Root",
        "operationId": "root_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/folders/add-folder": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Add Folder",
        "operationId": "add_folder_folders_add_folder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFolderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFolderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/enable-ai-tagging": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Enable Ai Tagging",
        "description": "Enable AI tagging for multiple folders.",
        "operationId": "enable_ai_tagging_folders_enable_ai_tagging_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAITaggingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAITaggingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/disable-ai-tagging": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Disable Ai Tagging",
        "description": "Disable AI tagging for multiple folders.",
        "operationId": "disable_ai_tagging_folders_disable_ai_tagging_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAITaggingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAITaggingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/delete-folders": {
      "delete": {
        "tags": [
          "Folders"
        ],
        "summary": "Delete Folders",
        "description": "Delete multiple folders by their IDs.",
        "operationId": "delete_folders_folders_delete_folders_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFoldersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFoldersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/sync-folder": {
      "post": {
        "tags": [
          "Folders"
        ],
        "summary": "Sync Folder",
        "description": "Sync a folder by comparing filesystem folders with database entries and removing extra DB entries.",
        "operationId": "sync_folder_folders_sync_folder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncFolderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncFolderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/folders/all-folders": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Get All Folders",
        "description": "Get details of all folders in the database.",
        "operationId": "get_all_folders_folders_all_folders_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFoldersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__folders__ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/albums/": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Get Albums",
        "operationId": "get_albums_albums__get",
        "parameters": [
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Show Hidden"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlbumsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Albums"
        ],
        "summary": "Create Album",
        "operationId": "create_album_albums__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlbumRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAlbumResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Get Album",
        "operationId": "get_album_albums__album_id__get",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlbumResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Albums"
        ],
        "summary": "Update Album",
        "operationId": "update_album_albums__album_id__put",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlbumRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Albums"
        ],
        "summary": "Delete Album",
        "operationId": "delete_album_albums__album_id__delete",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}/images/get": {
      "post": {
        "tags": [
          "Albums"
        ],
        "summary": "Get Album Images",
        "operationId": "get_album_images_albums__album_id__images_get_post",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAlbumImagesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAlbumImagesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}/images": {
      "post": {
        "tags": [
          "Albums"
        ],
        "summary": "Add Images To Album",
        "operationId": "add_images_to_album_albums__album_id__images_post",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageIdsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Albums"
        ],
        "summary": "Remove Images From Album",
        "operationId": "remove_images_from_album_albums__album_id__images_delete",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageIdsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}/images/{image_id}": {
      "delete": {
        "tags": [
          "Albums"
        ],
        "summary": "Remove Image From Album",
        "operationId": "remove_image_from_album_albums__album_id__images__image_id__delete",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Album Id"
            }
          },
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/images/": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get All Images",
        "description": "Get all images from the database.",
        "operationId": "get_all_images_images__get",
        "parameters": [
          {
            "name": "tagged",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images by tagged status",
              "title": "Tagged"
            },
            "description": "Filter images by tagged status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllImagesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__images__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/face-clusters/{cluster_id}": {
      "put": {
        "tags": [
          "Face Clusters"
        ],
        "summary": "Rename Cluster",
        "description": "Rename a face cluster by its ID.",
        "operationId": "rename_cluster_face_clusters__cluster_id__put",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cluster Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameClusterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenameClusterResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/face-clusters/": {
      "get": {
        "tags": [
          "Face Clusters"
        ],
        "summary": "Get All Clusters",
        "description": "Get metadata for all face clusters including face counts.",
        "operationId": "get_all_clusters_face_clusters__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClustersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/face-clusters/{cluster_id}/images": {
      "get": {
        "tags": [
          "Face Clusters"
        ],
        "summary": "Get Cluster Images",
        "description": "Get all images that contain faces belonging to a specific cluster.",
        "operationId": "get_cluster_images_face_clusters__cluster_id__images_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cluster Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClusterImagesResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/face-clusters/face-search": {
      "post": {
        "tags": [
          "Face Clusters"
        ],
        "summary": "Face Tagging",
        "operationId": "face_tagging_face_clusters_face_search_post",
        "parameters": [
          {
            "name": "input_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InputType"
                }
              ],
              "description": "Choose input type: 'path' or 'base64'",
              "default": "path",
              "title": "Input Type"
            },
            "description": "Choose input type: 'path' or 'base64'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/face-clusters/global-recluster": {
      "post": {
        "tags": [
          "Face Clusters"
        ],
        "summary": "Trigger Global Reclustering",
        "description": "Manually trigger global face reclustering.\nThis forces full reclustering regardless of the 24-hour rule.",
        "operationId": "trigger_global_reclustering_face_clusters_global_recluster_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalReclusterResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__face_clusters__ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user-preferences/": {
      "get": {
        "tags": [
          "User Preferences"
        ],
        "summary": "Get User Preferences",
        "description": "Get user preferences from metadata.",
        "operationId": "get_user_preferences_user_preferences__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPreferencesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user_preferences__ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Preferences"
        ],
        "summary": "Update User Preferences",
        "description": "Update user preferences in metadata.",
        "operationId": "update_user_preferences_user_preferences__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserPreferencesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user_preferences__ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__user_preferences__ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/memories/on-this-day": {
      "get": {
        "tags": [
          "Memories"
        ],
        "summary": "Get On This Day Memories",
        "description": "Get images from the same day in previous years.\n\nReturns memories from the same month and day across different years,\ncreating a nostalgic \"On This Day\" experience.",
        "operationId": "get_on_this_day_memories_memories_on_this_day_get",
        "parameters": [
          {
            "name": "years_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Number of years to look back",
              "default": 5,
              "title": "Years Back"
            },
            "description": "Number of years to look back"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnThisDayResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__memories__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/memories/recent": {
      "get": {
        "tags": [
          "Memories"
        ],
        "summary": "Get Recent Memories",
        "description": "Get recent collections of images grouped by date.\n\nReturns memories from recent days where you took multiple photos,\nhighlighting significant photo-taking events.",
        "operationId": "get_recent_memories_memories_recent_get",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days to look back",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to look back"
          },
          {
            "name": "min_images",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Minimum images per day to create a memory",
              "default": 5,
              "title": "Min Images"
            },
            "description": "Minimum images per day to create a memory"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentMemoriesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__memories__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/memories/people": {
      "get": {
        "tags": [
          "Memories"
        ],
        "summary": "Get People Memories",
        "description": "Get memories grouped by people (face clusters).\n\nReturns collections of photos featuring the same person,\ncreating personalized memory collections.",
        "operationId": "get_people_memories_memories_people_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of people to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of people to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleMemoriesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__memories__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/memories/tags": {
      "get": {
        "tags": [
          "Memories"
        ],
        "summary": "Get Tag Memories",
        "description": "Get memories grouped by common tags/objects.\n\nReturns collections of photos featuring the same objects or themes,\ncreating thematic memory collections.",
        "operationId": "get_tag_memories_memories_tags_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of tags to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of tags to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagMemoriesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__memories__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/memories/all": {
      "get": {
        "tags": [
          "Memories"
        ],
        "summary": "Get All Memories",
        "description": "Get all types of memories in a single request.\n\nReturns a comprehensive collection including:\n- On This Day memories\n- Recent memories\n- People-based memories\n- Tag-based memories",
        "operationId": "get_all_memories_memories_all_get",
        "parameters": [
          {
            "name": "years_back",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Years to look back for 'On This Day'",
              "default": 5,
              "title": "Years Back"
            },
            "description": "Years to look back for 'On This Day'"
          },
          {
            "name": "recent_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Days to look back for recent memories",
              "default": 30,
              "title": "Recent Days"
            },
            "description": "Days to look back for recent memories"
          },
          {
            "name": "min_images",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Minimum images per recent memory",
              "default": 5,
              "title": "Min Images"
            },
            "description": "Minimum images per recent memory"
          },
          {
            "name": "people_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of people memories",
              "default": 10,
              "title": "People Limit"
            },
            "description": "Maximum number of people memories"
          },
          {
            "name": "tags_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of tag memories",
              "default": 10,
              "title": "Tags Limit"
            },
            "description": "Maximum number of tag memories"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllMemoriesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__memories__ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddFolderData": {
        "properties": {
          "folder_id": {
            "type": "string",
            "title": "Folder Id"
          },
          "folder_path": {
            "type": "string",
            "title": "Folder Path"
          }
        },
        "type": "object",
        "required": [
          "folder_id",
          "folder_path"
        ],
        "title": "AddFolderData"
      },
      "AddFolderRequest": {
        "properties": {
          "folder_path": {
            "type": "string",
            "title": "Folder Path"
          },
          "parent_folder_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Folder Id"
          },
          "taggingCompleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taggingcompleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "folder_path"
        ],
        "title": "AddFolderRequest"
      },
      "AddFolderResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddFolderData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AddFolderResponse"
      },
      "Album": {
        "properties": {
          "album_id": {
            "type": "string",
            "title": "Album Id"
          },
          "album_name": {
            "type": "string",
            "title": "Album Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden"
          }
        },
        "type": "object",
        "required": [
          "album_id",
          "album_name",
          "description",
          "is_hidden"
        ],
        "title": "Album"
      },
      "AllMemoriesData": {
        "properties": {
          "on_this_day": {
            "items": {
              "$ref": "#/components/schemas/OnThisDayMemory"
            },
            "type": "array",
            "title": "On This Day"
          },
          "recent": {
            "items": {
              "$ref": "#/components/schemas/RecentMemory"
            },
            "type": "array",
            "title": "Recent"
          },
          "people": {
            "items": {
              "$ref": "#/components/schemas/PersonMemory"
            },
            "type": "array",
            "title": "People"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagMemory"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "on_this_day",
          "recent",
          "people",
          "tags"
        ],
        "title": "AllMemoriesData"
      },
      "AllMemoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "$ref": "#/components/schemas/AllMemoriesData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "AllMemoriesResponse"
      },
      "ClusterMetadata": {
        "properties": {
          "cluster_id": {
            "type": "string",
            "title": "Cluster Id"
          },
          "cluster_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cluster Name"
          },
          "face_image_base64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Face Image Base64"
          },
          "face_count": {
            "type": "integer",
            "title": "Face Count"
          }
        },
        "type": "object",
        "required": [
          "cluster_id",
          "cluster_name",
          "face_image_base64",
          "face_count"
        ],
        "title": "ClusterMetadata"
      },
      "CreateAlbumRequest": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden",
            "default": false
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateAlbumRequest"
      },
      "CreateAlbumResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "album_id": {
            "type": "string",
            "title": "Album Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "album_id"
        ],
        "title": "CreateAlbumResponse"
      },
      "DeleteFoldersData": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "folder_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Folder Ids"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "folder_ids"
        ],
        "title": "DeleteFoldersData"
      },
      "DeleteFoldersRequest": {
        "properties": {
          "folder_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Folder Ids"
          }
        },
        "type": "object",
        "required": [
          "folder_ids"
        ],
        "title": "DeleteFoldersRequest"
      },
      "DeleteFoldersResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeleteFoldersData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "DeleteFoldersResponse"
      },
      "FaceSearchRequest": {
        "properties": {
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "base64_data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base64 Data"
          }
        },
        "type": "object",
        "title": "FaceSearchRequest"
      },
      "FolderDetails": {
        "properties": {
          "folder_id": {
            "type": "string",
            "title": "Folder Id"
          },
          "folder_path": {
            "type": "string",
            "title": "Folder Path"
          },
          "parent_folder_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Folder Id"
          },
          "last_modified_time": {
            "type": "integer",
            "title": "Last Modified Time"
          },
          "AI_Tagging": {
            "type": "boolean",
            "title": "Ai Tagging"
          },
          "taggingCompleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taggingcompleted"
          }
        },
        "type": "object",
        "required": [
          "folder_id",
          "folder_path",
          "last_modified_time",
          "AI_Tagging"
        ],
        "title": "FolderDetails"
      },
      "GetAlbumImagesRequest": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "title": "GetAlbumImagesRequest"
      },
      "GetAlbumImagesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "image_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Image Ids"
          }
        },
        "type": "object",
        "required": [
          "success",
          "image_ids"
        ],
        "title": "GetAlbumImagesResponse"
      },
      "GetAlbumResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/Album"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAlbumResponse"
      },
      "GetAlbumsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "albums": {
            "items": {
              "$ref": "#/components/schemas/Album"
            },
            "type": "array",
            "title": "Albums"
          }
        },
        "type": "object",
        "required": [
          "success",
          "albums"
        ],
        "title": "GetAlbumsResponse"
      },
      "GetAllFoldersData": {
        "properties": {
          "folders": {
            "items": {
              "$ref": "#/components/schemas/FolderDetails"
            },
            "type": "array",
            "title": "Folders"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "folders",
          "total_count"
        ],
        "title": "GetAllFoldersData"
      },
      "GetAllFoldersResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetAllFoldersData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "GetAllFoldersResponse"
      },
      "GetAllImagesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ImageData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "GetAllImagesResponse"
      },
      "GetClusterImagesData": {
        "properties": {
          "cluster_id": {
            "type": "string",
            "title": "Cluster Id"
          },
          "cluster_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cluster Name"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/ImageInCluster"
            },
            "type": "array",
            "title": "Images"
          },
          "total_images": {
            "type": "integer",
            "title": "Total Images"
          }
        },
        "type": "object",
        "required": [
          "cluster_id",
          "images",
          "total_images"
        ],
        "title": "GetClusterImagesData",
        "description": "Data model for cluster images response."
      },
      "GetClusterImagesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetClusterImagesData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "GetClusterImagesResponse",
        "description": "Response model for getting images in a cluster."
      },
      "GetClustersData": {
        "properties": {
          "clusters": {
            "items": {
              "$ref": "#/components/schemas/ClusterMetadata"
            },
            "type": "array",
            "title": "Clusters"
          }
        },
        "type": "object",
        "required": [
          "clusters"
        ],
        "title": "GetClustersData"
      },
      "GetClustersResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetClustersData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "GetClustersResponse"
      },
      "GetUserPreferencesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_preferences": {
            "$ref": "#/components/schemas/UserPreferencesData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "user_preferences"
        ],
        "title": "GetUserPreferencesResponse",
        "description": "Response model for getting user preferences"
      },
      "GlobalReclusterData": {
        "properties": {
          "clusters_created": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clusters Created"
          }
        },
        "type": "object",
        "title": "GlobalReclusterData"
      },
      "GlobalReclusterResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GlobalReclusterData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "GlobalReclusterResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "folder_id": {
            "type": "string",
            "title": "Folder Id"
          },
          "thumbnailPath": {
            "type": "string",
            "title": "Thumbnailpath"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataModel"
          },
          "isTagged": {
            "type": "boolean",
            "title": "Istagged"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "folder_id",
          "thumbnailPath",
          "metadata",
          "isTagged"
        ],
        "title": "ImageData"
      },
      "ImageIdsRequest": {
        "properties": {
          "image_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Image Ids"
          }
        },
        "type": "object",
        "required": [
          "image_ids"
        ],
        "title": "ImageIdsRequest"
      },
      "ImageInCluster": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "thumbnailPath": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thumbnailpath"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "face_id": {
            "type": "integer",
            "title": "Face Id"
          },
          "confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence"
          },
          "bbox": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "face_id"
        ],
        "title": "ImageInCluster",
        "description": "Represents an image that contains faces from a specific cluster."
      },
      "InputType": {
        "type": "string",
        "enum": [
          "path",
          "base64"
        ],
        "title": "InputType"
      },
      "MemoryImage": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "thumbnailPath": {
            "type": "string",
            "title": "Thumbnailpath"
          },
          "metadata": {
            "$ref": "#/components/schemas/MemoryImageMetadata"
          },
          "isTagged": {
            "type": "boolean",
            "title": "Istagged"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "thumbnailPath",
          "metadata",
          "isTagged"
        ],
        "title": "MemoryImage"
      },
      "MemoryImageMetadata": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date_created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Created"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "file_location": {
            "type": "string",
            "title": "File Location"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "item_type": {
            "type": "string",
            "title": "Item Type"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "name",
          "width",
          "height",
          "file_location",
          "file_size",
          "item_type"
        ],
        "title": "MemoryImageMetadata"
      },
      "MetadataModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date_created": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Created"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "file_location": {
            "type": "string",
            "title": "File Location"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "item_type": {
            "type": "string",
            "title": "Item Type"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "name",
          "date_created",
          "width",
          "height",
          "file_location",
          "file_size",
          "item_type"
        ],
        "title": "MetadataModel"
      },
      "OnThisDayMemory": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year"
          },
          "years_ago": {
            "type": "integer",
            "title": "Years Ago"
          },
          "date": {
            "type": "string",
            "title": "Date"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/MemoryImage"
            },
            "type": "array",
            "title": "Images"
          }
        },
        "type": "object",
        "required": [
          "year",
          "years_ago",
          "date",
          "images"
        ],
        "title": "OnThisDayMemory"
      },
      "OnThisDayResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/OnThisDayMemory"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "OnThisDayResponse"
      },
      "PeopleMemoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PersonMemory"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "PeopleMemoriesResponse"
      },
      "PersonMemory": {
        "properties": {
          "cluster_id": {
            "type": "string",
            "title": "Cluster Id"
          },
          "person_name": {
            "type": "string",
            "title": "Person Name"
          },
          "image_count": {
            "type": "integer",
            "title": "Image Count"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/MemoryImage"
            },
            "type": "array",
            "title": "Images"
          }
        },
        "type": "object",
        "required": [
          "cluster_id",
          "person_name",
          "image_count",
          "images"
        ],
        "title": "PersonMemory"
      },
      "RecentMemoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/RecentMemory"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "RecentMemoriesResponse"
      },
      "RecentMemory": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "iso_date": {
            "type": "string",
            "title": "Iso Date"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/MemoryImage"
            },
            "type": "array",
            "title": "Images"
          }
        },
        "type": "object",
        "required": [
          "date",
          "iso_date",
          "images"
        ],
        "title": "RecentMemory"
      },
      "RenameClusterData": {
        "properties": {
          "cluster_id": {
            "type": "string",
            "title": "Cluster Id"
          },
          "cluster_name": {
            "type": "string",
            "title": "Cluster Name"
          }
        },
        "type": "object",
        "required": [
          "cluster_id",
          "cluster_name"
        ],
        "title": "RenameClusterData"
      },
      "RenameClusterRequest": {
        "properties": {
          "cluster_name": {
            "type": "string",
            "title": "Cluster Name"
          }
        },
        "type": "object",
        "required": [
          "cluster_name"
        ],
        "title": "RenameClusterRequest"
      },
      "RenameClusterResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RenameClusterData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "RenameClusterResponse"
      },
      "SuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "msg": {
            "type": "string",
            "title": "Msg"
          }
        },
        "type": "object",
        "required": [
          "success",
          "msg"
        ],
        "title": "SuccessResponse"
      },
      "SyncFolderData": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "deleted_folders": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Deleted Folders"
          },
          "added_count": {
            "type": "integer",
            "title": "Added Count"
          },
          "added_folders": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Added Folders"
          },
          "folder_id": {
            "type": "string",
            "title": "Folder Id"
          },
          "folder_path": {
            "type": "string",
            "title": "Folder Path"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "deleted_folders",
          "added_count",
          "added_folders",
          "folder_id",
          "folder_path"
        ],
        "title": "SyncFolderData"
      },
      "SyncFolderRequest": {
        "properties": {
          "folder_path": {
            "type": "string",
            "title": "Folder Path"
          },
          "folder_id": {
            "type": "string",
            "title": "Folder Id"
          }
        },
        "type": "object",
        "required": [
          "folder_path",
          "folder_id"
        ],
        "title": "SyncFolderRequest"
      },
      "SyncFolderResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SyncFolderData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "SyncFolderResponse"
      },
      "TagMemoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/TagMemory"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "data"
        ],
        "title": "TagMemoriesResponse"
      },
      "TagMemory": {
        "properties": {
          "tag_name": {
            "type": "string",
            "title": "Tag Name"
          },
          "image_count": {
            "type": "integer",
            "title": "Image Count"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/MemoryImage"
            },
            "type": "array",
            "title": "Images"
          }
        },
        "type": "object",
        "required": [
          "tag_name",
          "image_count",
          "images"
        ],
        "title": "TagMemory"
      },
      "UpdateAITaggingData": {
        "properties": {
          "updated_count": {
            "type": "integer",
            "title": "Updated Count"
          },
          "folder_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Folder Ids"
          }
        },
        "type": "object",
        "required": [
          "updated_count",
          "folder_ids"
        ],
        "title": "UpdateAITaggingData"
      },
      "UpdateAITaggingRequest": {
        "properties": {
          "folder_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Folder Ids"
          }
        },
        "type": "object",
        "required": [
          "folder_ids"
        ],
        "title": "UpdateAITaggingRequest"
      },
      "UpdateAITaggingResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UpdateAITaggingData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "UpdateAITaggingResponse"
      },
      "UpdateAlbumRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden"
          },
          "current_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Password"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "is_hidden"
        ],
        "title": "UpdateAlbumRequest"
      },
      "UpdateUserPreferencesRequest": {
        "properties": {
          "YOLO_model_size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "nano",
                  "small",
                  "medium"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Yolo Model Size"
          },
          "GPU_Acceleration": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gpu Acceleration"
          }
        },
        "type": "object",
        "title": "UpdateUserPreferencesRequest",
        "description": "Request model for updating user preferences"
      },
      "UpdateUserPreferencesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_preferences": {
            "$ref": "#/components/schemas/UserPreferencesData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "user_preferences"
        ],
        "title": "UpdateUserPreferencesResponse",
        "description": "Response model for updating user preferences"
      },
      "UserPreferencesData": {
        "properties": {
          "YOLO_model_size": {
            "type": "string",
            "enum": [
              "nano",
              "small",
              "medium"
            ],
            "title": "Yolo Model Size",
            "default": "small"
          },
          "GPU_Acceleration": {
            "type": "boolean",
            "title": "Gpu Acceleration",
            "default": true
          }
        },
        "type": "object",
        "title": "UserPreferencesData",
        "description": "User preferences data structure"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__schemas__face_clusters__ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": false
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "title": "ErrorResponse"
      },
      "app__schemas__folders__ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": false
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "title": "ErrorResponse"
      },
      "app__schemas__images__ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "default": false
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "message",
          "error"
        ],
        "title": "ErrorResponse"
      },
      "app__schemas__memories__ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "error",
          "message"
        ],
        "title": "ErrorResponse"
      },
      "app__schemas__user_preferences__ErrorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "error",
          "message"
        ],
        "title": "ErrorResponse",
        "description": "Error response model"
      }
    }
  }
}